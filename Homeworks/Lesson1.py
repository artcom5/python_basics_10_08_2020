# Домашнее задание УРОК 1.
# ЗАДАЧИ:
"""1. Поработайте с переменными, создайте несколько, выведите на экран,
запросите у пользователя несколько чисел и строк и сохраните в переменные,
выведите на экран.
"""
name = 'Артём'    # Присвоить строку переменной name.
age = 35   # Присвоить число 35 переменной age.
print(f'Меня зовут {name}, мне {age} лет.')    # Вывести name и age пользователю.

# Запросить имя, фамилию, возраст и телефон и присвоить в user_name, user_surname, user_age, user_tel.
user_name = input('Введите имя: ')
user_surname = input('Введите фамилию: ')
user_age = int(input('Возраст: '))
user_tel = int(input('Тел.: '))

# Вывести переменные на экран.
print(f'Здравствуйте {user_name} {user_surname}!')
print(f'Ваш возраст {user_age}, ваш номер телефона {user_tel}')


"""2. Пользователь вводит время в секундах. 
Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
Используйте форматирование строк.
"""

TIME_CONST = 60

print('Программа для перевода времени из секунд в формат ЧЧ:ММ:CC')
print('-'*58)
sec_input = int(input('Введите секунды: '))    # Запросить у пользователя секунды.

# Расчитать количество секунд, минут, часов.
second_result = sec_input % TIME_CONST
minutes = sec_input // TIME_CONST
hours_result = minutes // TIME_CONST
minutes_result = minutes % TIME_CONST
# Вывести результат в формате ЧЧ:ММ:CC.
print("Вы ввели {0} секунд это сотавляет {1:02}:{2:02}:{3:02}"
      .format(sec_input, hours_result, minutes_result, second_result))

"""3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. 
Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
"""
# Вариант 1
print('Программа поиска суммы чисел n + nn + nnn')
num = int(input('Введите число "n": '))    # Запросить у пользователя число.
result = num + num * 11 + num * 111    # Расчитать.
print(f'{num} + {num*11} + {num*111} = {result}')    # Вывести результат.

# Вариант 2
print('Программа поиска суммы чисел n + nn + nnn')
number = int(input('Введите число "n": '))    # Запросить у пользователя число.
number_1 = str(number) * 2    # Преобразовать число в строку и сделать дабл.
number_2 = str(number) * 3    # Преобразовать число в строку и сделать трипл.
result_number = number + int(number_1) + int(number_2)
print(f'{number} + {number_1} + {number_2} = {result_number}')    # Вывести результат.

# Вариант 3
print('Программа поиска суммы чисел n + nn + nnn')
number = int(input('Введите число "n": '))    # Запросить у пользователя число.
i = 1    # Создать переменную итеартор.
result_number = 0    # Создать накопитель.
# Выполнять пока i != 4
while i != 4:
    number_0 = str(number) * i    # Преобразовать число в строку увеличить значение на i.
    i += 1    # Увеличить i
    result_number += int(number_0)    # Расчитать
print(f'Результат равен {number} + {str(number) * 2} + {str(number) * 3} ='
      f' {result_number}')    # Вывести результат.

"""4. Пользователь вводит целое положительное число. 
Найдите самую большую цифру в числе. 
Для решения используйте цикл while и арифметические операции.
"""
# Вариант 1
CONST = 10
print('Программа нахождения самой большой цифры в числе.')
num = int(input('Введите целое положительное число: '))    # Запросить число.
num_div = num % CONST    # Найти остаток.
num_dec = num // CONST    # Найти десятки.
# Выполнить пока десятки > 0.
while num_dec > 0:
    dec_div = num_dec % CONST    # Найти остаток от десяток.
    if dec_div > num_div:    # Если остаток от десятков больше остатка то.
        num_div = num_dec % CONST    # Найти остаток из десятков.
    num_dec = num_dec // CONST    # Найти целое число.
print(f'Самая большая цифра из числа {num} является цифра {num_div}')   # Вывести самую большую цифру.

# Вариант 2
"""Я понимаю что в рамках первого урока мы это не проходили))),
но это самое первое что мне пришло на ум с алгоритмом превого 
варианта мне пришлось честно долго пыхтеть))) надо поттягивать математику))).
"""

print('Программа нахождения самой большой цифры в числе.')
num = input('Введите целое положительное число: ')    # Запросить число.
tuple_0 = tuple(num)    # Преобразовать в кортеж
list_0 = []     # Создать пустой список.
# Перебрать кортеж.
for count in tuple_0:
    list_0.append(int(count))    # Добавить преобразованные числа в список.
print(f'Самая большая цифра из числа {num} является цифра {max(list_0)}')    # Вывести самую большую цифру.


"""5. Запросите у пользователя значения выручки и издержек фирмы. 
Определите, с каким финансовым результатом работает фирма (прибыль — выручка больше издержек, 
или убыток — издержки больше выручки). Выведите соответствующее сообщение. Если фирма отработала
с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке). 
Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.
"""
print('Программа считает прибыль и рентабельность предприятия.')
takings = float(input('Введите ВЫРУЧКУ: '))    # Запрос выручки
costs = float(input('Введите ИЗДЕРЖКИ: '))    # Запрос издержек

if takings > costs:    # Если выручка больше издержек.
    profit = takings - costs    # расчитать прибыль.
    rentability = profit / takings    # расчитать рентабельность.
    # Вывод данных расчета.
    print('Я Вас поздравляю фирма отработала с прибылью!')
    print(f'Прибыль составила {profit} руб.')
    print(f'Рентабельность {round(rentability, 2)}')
    working = int(input('Количество работников: '))    # Запросить количество работников.
    profit_working = profit / working    # Расчитать прибыль в расчет на одного работника.
    print(f'Прибыль фирмы в расчете на одного сотрудника {round(profit_working, 3)} руб.')    # Вывести результат.
elif takings == costs:
    print('Фирма отработала ровно.')
else:
    print('Я Вас поздравляю фирма банкрот!')

"""6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров.
Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22
Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.
"""
day = 1    # Обявить переменную для расчета дней.
print('Программа считает достижения спортсмена')
result = int(input('Сколько км. пробежал спортсмен в первый день?: '))    # Запросить кол-во км.
result_total = int(input('Какой результат км. хотите получить?: '))    # Запросить кол-во км. итог.
print(f'В {day}-й день: {result}')    # Вывод первого дня.
while result < result_total:    # Выполнить пока result меньше итога.
    result += result * 0.1    # Расчитать.
    day += 1
    print(f'В {day}-й день: {round(result, 2)}')    # Вывод последующих дней.

print(f'Ответ: на {day}-й день спортсмен достиг результата - не менее {round(result, 0)} ')

